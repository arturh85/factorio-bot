name: "publish"
on:
  push:
    tags:
      - 'v**'

jobs:
  build-publish:
    needs: create-github-release
    name: Build & Publish
    outputs:
      release_body: ${{ needs.create-github-release.outputs.release_body }}
      package_version: ${{ needs.create-github-release.outputs.package_version }}
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      # Prepare
      - name: 🔥 Checkout code
        uses: actions/checkout@v3
      - name: 🛠️ Install nodejs 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: 🛠️ Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - name: 💾 Cache Rust dependencies
        uses: Swatinem/rust-cache@v1
      - name: 💾 Cache javascript dependencies
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: 🛠️ Install tauri-cli
        run: |
          cargo install tauri-cli
      - name: 🛠️ Install webkit2gtk (for tauri)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 libgtksourceview-3.0-dev
      - name: 🛠️ Install mdbook with mermaid support
        if: matrix.platform == 'ubuntu-latest'
        run: |
          cargo install mdbook mdbook-mermaid
      - name: 🛠️ Install nodejs dependencies
        run: |
          cd app; yarn
      - name: 🦠 Update version in package.json & tauri.conf.json
        id: create_version
        run: |
          cd app/scripts; node update-package-version.js

      # Javascript
      - name: 🏗️ Build javascript code
        run: |
          cd app; yarn build:web

      # Rust
      - name: 🏗️ Build rust code
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          cargo build --release --timings
          cd app && yarn tauri:build

      # Output Signature
      - name: 🏗️ Build tauri updater json
        env:
          RELEASE_BODY: ${{ needs.create-github-release.outputs.release_body }}
        run: |
          mkdir updates
          cd app/scripts; node build-auto-updater-json.js

      # Upload updater json
      - name: 📤️ Upload updater json to Job for later
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.platform }}
          path: updates/*

      # Publish tauri artifacts
      - name: 📤️ Upload artifacts to Github release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-github-release.outputs.id }}
          iconPath: "../public/logo.png"
          configPath: "tauri.conf.json"
          projectPath: "./app"
          tauriScript: "npm run dummy"

      # Prepare gh-pages
      - name: 🏗️ Build rust docs
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mkdir public 
          cargo doc --all --no-deps
          mv target/doc public/doc
      - name: 🏗️ Build mdbook "user guide"
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mdbook build docs/userguide
          mv docs/userguide/book public/userguide
      - name: 🏗️ Build mdbook "developer guide"
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mdbook build docs/devguide
          mv docs/devguide/book public/devguide
      - name: 🏗️ Build lua api docs
        if: matrix.platform == 'ubuntu-latest'
        uses: ./.github/actions/ldoc/
        with:
          config-path: docs/lua/config.ld
          source-path: docs/lua/src/
      - name: 🏗️ Fix lua api docs permissions & move to public/
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo chown -R $(id -u):$(id -g) doc/
          mv doc/ public/lua/
      - name: 🚚 Move generated docs and stats to public/ folder
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mv app/dist/stats.html public/stats.html
          mv target/cargo-timings/ public/cargo-timings/

      # Publish gh-pages
      - name: 📤 Deploy public/ to gh-pages
        if: matrix.platform == 'ubuntu-latest'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./public
          force_orphan: true

  create-github-release:
    name: Create Github Release
    runs-on: ubuntu-latest
    outputs:
      id: ${{ steps.create_release.outputs.id }}
      release_body: ${{ steps.release.outputs.release_body }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: 🛠️ Install nodejs 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: 🦠 Update version in package.json & tauri.conf.json
        run: |
          cd app/scripts; node update-package-version.js
      - name: Generate changelog
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      - name: Set the release body to changelog
        id: release
        shell: bash
        run: |
          r=$(cat ${{ steps.git-cliff.outputs.changelog }})
          r="$(printf "$r" | tail -n +3)"
          r="${r//'%'/'%25'}"
          r="${r//$'\n'/'%0A'}"
          r="${r//$'\r'/'%0D'}"
          echo "::set-output name=release_body::$r"


      - name: 🔖 Create github release
        uses: ncipollo/release-action@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          replacesArtifacts: false
          name: "Factorio Bot v${{ env.PACKAGE_VERSION }}"
          tag: v${{ env.PACKAGE_VERSION }}
          body: "${{ steps.release.outputs.release_body }}"
          draft: false
          prerelease: true

  publish-autoupdater-json:
    name: Publish updater json files
    runs-on: ubuntu-latest
    needs: build-publish
    steps:
      - name: 🔥 Checkout code
        uses: actions/checkout@v3
      - name: 🛠️ Install nodejs 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Download update jsons
      - name: 📥 Download update json files from windows
        uses: actions/download-artifact@v3
        with:
          name: windows-latest
          path: updates-windows/
      - name: 📥 Download update json files from linux
        uses: actions/download-artifact@v3
        with:
          name: ubuntu-latest
          path: updates-linux/
      - name: 📥 Download update json files from macos
        uses: actions/download-artifact@v3
        with:
          name: macos-latest
          path: updates-macos/

      # Move update jsons to public/
      - name: 🏗️ Move to public/
        run: |
          mkdir public/
          mkdir public/updates/
          mv updates-windows/* public/updates/
          mv updates-linux/* public/updates/
          mv updates-macos/* public/updates/
          cd app/scripts; node merge-auto-updater-json.js

      # Publish gh-pages
      - name: 📤 Re-Deploy public/ to gh-pages (with keep_files)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./public
          force_orphan: false
          keep_files: true
