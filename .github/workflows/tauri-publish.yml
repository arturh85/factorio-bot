name: "publish"
on:
  push:
    branches:
      - 'releases/**'

jobs:
  create-github-release:
    name: Create Github Release
    runs-on: ubuntu-18.04
    outputs:
      id: ${{ steps.create_release.outputs.id }}
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: ⚡ install NodeJS 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: 🦠 extract version from app/src-tauri/Cargo.toml to package.json & tauri.conf.json & ENV
        run: cd app; node update-package-version.js
      - name: 🔖 create github draft release
        uses: ncipollo/release-action@v1
        id: create_draft_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          replacesArtifacts: false
          name: "Factorio Bot v${{ env.PACKAGE_VERSION }}"
          tag: v${{ env.PACKAGE_VERSION }}
          body: "body filled later"
          draft: true
          prerelease: true
      - name: Generate a changelog
        uses: orhun/git-cliff-action@v1
        id: git-cliff
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      - name: Set the release body
        id: release
        shell: bash
        run: |
          r=$(cat ${{ steps.git-cliff.outputs.changelog }})
          r="$(printf "$r" | tail -n +3)"
          r="${r//'%'/'%25'}"
          r="${r//$'\n'/'%0A'}"
          r="${r//$'\r'/'%0D'}"
          echo "::set-output name=release_body::$r"


      - name: 🔖 create github release
        uses: ncipollo/release-action@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          allowUpdates: true
          replacesArtifacts: false
          name: "Factorio Bot v${{ env.PACKAGE_VERSION }}"
          tag: v${{ env.PACKAGE_VERSION }}
          body: "${{ steps.release.outputs.release_body }}"
          draft: false
          prerelease: true

  publish-tauri:
    needs: create-github-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: 🔥 checkout code
        uses: actions/checkout@v2
      - name: ⚡ install NodeJS 16
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: ⚡ install Rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: ⚡ install cargo tauri-bundler
        run: cargo install tauri-bundler --force
      - name: ⚡ install apt webkit2gtk (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 libgtksourceview-3.0-dev
      - name: ⚡ install cargo mdbook (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: cargo install mdbook --force
      - name: ⚡ install NodeJS dependencies
        run: cd app; yarn
      - name: 🦠 extract version from app/src-tauri/Cargo.toml to package.json & tauri.conf.json & ENV
        run: cd app; node update-package-version.js
      - name: ✅ lint javascript code
        run: cd app; yarn lint
      - name: ✅ run javascript tests
        run: cd app; yarn test:unit
      - name: 🚧 build javascript
        run: cd app; yarn build:web
      - name: ✅ run rust tests
        run: cd app; yarn cargo:test
      - name: 🚧 build rust
        run: cd app; yarn tauri:build

      - name: 🚚 move build output to correct folder
        run: mv target/ app/src-tauri/target/

      - name: 📦️ upload tauri artifacts to release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-github-release.outputs.id }}
          iconPath: "../public/logo.png"
          configPath: "tauri.conf.json"
          projectPath: "./app"
          npmScript: "dummy" # dummy script because already build & moved

      - name: 🚚 move build back so it can be cached
        run: mv app/src-tauri/target/ target/

#      - name: 🚚 move binary for NSIS (windows only)
#        if: matrix.platform == 'windows-latest'
#        run: mv app/src-tauri/target/release/deps/factorio_bot.exe .github/chocolatey/factorio-bot.exe
#      - name: 🚧 build NSIS installer (windows only)
#        if: matrix.platform == 'windows-latest'
#        uses: joncloud/makensis-action@v3.6
#        with:
#          script-file: ".github/chocolatey/installer.nsi"
#          arguments: "/V3"

#      - name: 📦️ upload NSIS installer to release (windows only)
#        if: matrix.platform == 'windows-latest'
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          upload_url: ${{ needs.create-github-release.outputs.upload_url }}
#          asset_path: ./.github/chocolatey/factorio-bot-installer.exe
#          asset_name: factorio-bot-installer.exe
#          asset_content_type: application/octet-stream
#      - name: 🚧 calculate checksum for chocolatey (windows only)
#        if: matrix.platform == 'windows-latest'
#        run: cd app; yarn checksum:update
#      - name: 🚧 build nuget package for chocolatey (windows only)
#        if: matrix.platform == 'windows-latest'
#        uses: crazy-max/ghaction-chocolatey@v1
#        with:
#          args: pack .github/chocolatey/factorio-bot.nuspec
#      - name: 🚚 rename nupkg without version in filename (windows only)
#        if: matrix.platform == 'windows-latest'
#        run: mv factorio-bot.*.nupkg factorio-bot.nupkg
#      - name: 📦 publish nuget package to chocolatey (windows only)
#        if: matrix.platform == 'windows-latest'
#        uses: crazy-max/ghaction-chocolatey@v1
#        env:
#          APIKEY: ${{ secrets.CHOCOLATEY_APIKEY }}
#        with:
#          args: push factorio-bot.nupkg --key "${{ env.APIKEY }}" --source https://push.chocolatey.org/

      - name: 🚧 build rust doc for gh-pages (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: mkdir public && cargo doc --all --no-deps && mv target/doc public/doc

      - name: 🚧 build mdBook (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: mdbook build docs && mv docs/book public/book && mv index.html public/

      - name: 🚚 move app stats.html to gh-pages (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: mv app/dist/stats.html public/stats.html

      - name: 📦 deploy public to gh-pages (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        uses: peaceiris/actions-gh-pages@364c31d33bb99327c77b3a5438a83a357a6729ad # v3.4.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./public
          force_orphan: true