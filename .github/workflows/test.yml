name: "test"
on:
  push:
    branches:
      - master
      - renovate/*
      - feature/*
    tags-ignore:
      - v*

jobs:
  test-build:
    name: Test & Build
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}

    steps:
      # Prepare
      - name: 🔥 Checkout code
        uses: actions/checkout@v3
      - name: 🛠️ Install nodejs 16
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: 🛠️ Install rust stable
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
      - uses: Swatinem/rust-cache@v1
      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: 🛠️ Install tauri-cli
        run: |
          cargo install tauri-cli
      - name: 🛠️ Install tarpaulin code coverage analyser
        if: matrix.platform == 'ubuntu-latest'
        run: |
          cargo install cargo-tarpaulin
      - name: 🛠️ Install webkit2gtk (for tauri)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkit2gtk-4.0 libgtksourceview-3.0-dev

      # Javascript
      - name: 🛠️ Install nodejs dependencies
        run: |
          cd app; yarn
      - name: 🏗️ Build javascript code
        run: |
          cd app; yarn build:web
      - name: 🧪 Lint javascript code
        run: |
          cd app; yarn lint
      - name: 🧪 Test javascript code
        run: |
          cd app; yarn test:coverage

      # Rust
      - name: 🏗️ Build rust code
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        run: |
          cd app; yarn tauri:build
      - name: 🧪 Test rust code with tarpaulin
        if: matrix.platform == 'ubuntu-latest'
        run: |
          cargo tarpaulin --verbose --all-features --workspace --timeout 120 --out Xml
      - name: 🧪 Lint rust code
        continue-on-error: true
        run: |
          cd app; yarn cargo:clippy

      # Upload coverage
      - name: 📤 Upload coverage reports to codecov.io
        if: matrix.platform == 'ubuntu-latest' && github.ref == 'refs/heads/master'
        uses: codecov/codecov-action@v3
        continue-on-error: true
        with:
          fail_ci_if_error: false
          files: ./app/coverage/cobertura-coverage.xml,./cobertura.xml,./target/tarpaulin/coverage.json