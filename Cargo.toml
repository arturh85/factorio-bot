[workspace]
members = [
    "app/src-tauri",
    "crates/core",
    "crates/restapi",
    "crates/scripting",
#    "crates/scripting_rhai",
#    "crates/scripting_rune",
    "crates/scripting_lua",
]
resolver = "2"

# https://doc.rust-lang.org/cargo/reference/profiles.html
# 0: no optimizations
# 1: basic optimizations
# 2: some optimizations
# 3: all optimizations
# "s": optimize for binary size
# "z": optimize for binary size, but also turn off loop vectorization.

# defaults: https://doc.rust-lang.org/cargo/reference/profiles.html#release
[profile.release]
panic = "abort"
codegen-units = 1
lto = true
incremental = true
opt-level = "s"


# defaults: https://doc.rust-lang.org/cargo/reference/profiles.html#dev
[profile.dev]
incremental = true
opt-level = 0


# override the optimization level of dependencies.
# You can use that feature to optimize all dependencies for size while keeping the top crate unoptimized and debugger friendly.
[profile.dev.package."*"]
opt-level = "z"
debug = false




# cargo-release config: https://github.com/crate-ci/cargo-release/blob/master/docs/reference.md
[workspace.metadata.release]
pre-release-hook = ["git", "cliff", "-c", "../../cliff.toml", "-o", "../../CHANGELOG.md", "-r", "../../"]
consolidate-commits = true
consolidate-pushes = true
allow-branch = ["master"]
shared-version = true
dev-version = true
dev-version-ext = "dev"

# git-cliff config: https://github.com/orhun/git-cliff#configuration-file
[workspace.metadata.git-cliff.changelog]
# changelog header
header = """
# Changelog
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version %}\
    ## [{{ version | replace(from="v", to="") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | upper_first }}
    {% for commit in commits %}
        - {{ commit.message | upper_first }} ([{{ commit.id | truncate(length=7, end="") }}](https://github.com/arturh85/factorio-bot/commit/{{ commit.id }}))\
    {% endfor %}
{% endfor %}\n
"""
# remove the leading and trailing whitespaces from the template
trim = true
# changelog footer
footer = """
<!-- generated by git-cliff -->
"""

[workspace.metadata.git-cliff.git]
# allow only conventional commits
# https://www.conventionalcommits.org
conventional_commits = true
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^[fF]eat*", group = "Features"},
    { message = "^[fF]ix*", group = "Bug Fixes"},
    { message = "^[dD]oc*", group = "Documentation"},
    { message = "^[pP]erf*", group = "Performance"},
    { message = "^[rR]efactor*", group = "Refactor"},
    { message = "^[sS]tyle*", group = "Styling"},
    { message = "^[tT]est*", group = "Testing"},
    { message = "^chore\\(release\\): prepare for*", skip = true},
    { message = "^chore*", group = "Miscellaneous Tasks"},
    { body = ".*[sS]ecurity", group = "Security"},
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# glob pattern for matching git tags
tag_pattern = "v[0-9]*"
# regex for skipping tags
skip_tags = "v0.1.0-beta.1"